---
title: "Environmental correlation"
format: html
editor: visual
---

```{r}
pacman::p_load(
  dplyr,
  tidyverse,
  readxl,
  ggplot2,
  vegan,
  terra,
  corrplot,
  PerformanceAnalytics,
  usdm,
  janitor,
  openxlsx,
  raster)
```

# data

### from sites

```{r}
env_sites_GM <- read_xlsx("/Volumes/Emmerson's backup/C_forecasting_NL_env_data/All in NAD 83 - UTM 21/Sites_and_subplots/env_var/xlsx/to use/env_sites_GM_final.xlsx") %>% # environmental data from Gros Morne sites
  rename(CC = "CC10fill")

env_sites_TN <- read_xlsx("/Volumes/Emmerson's backup/C_forecasting_NL_env_data/All in NAD 83 - UTM 21/Sites_and_subplots/env_var/xlsx/to use/env_sites_TN_final.xlsx") %>% #environmental data from Terra Nova sites
    rename(CC = "CC10fill")

env_sites <- dplyr::bind_rows(env_sites_TN, env_sites_GM) # put sites together
env_sites$ex_ctrl <- env_sites$ex_ctrl %>% 
  replace_na("pair") # turn na's into character so we can filter out exclosures
env_sites <- env_sites %>% 
  filter(ex_ctrl != "EX") %>% #filter our exclosure sites
  dplyr::select(!ex_ctrl)  %>% # remove exclosure control column
  dplyr::select(!Moose) %>% # remove old moose classification
  dplyr::select(!nitro) # remove nitro because not good dataset
```

### from subplots

```{r}
env_subplots_GM <- read_xlsx("/Volumes/Emmerson's backup/C_forecasting_NL_env_data/All in NAD 83 - UTM 21/Sites_and_subplots/env_var/xlsx/to use/env_subplots_GM_final.xlsx") %>% # environmental data from Gros Morne subplots
  rename(CC = "CC15fill")

env_subplots_TN <- read_xlsx("/Volumes/Emmerson's backup/C_forecasting_NL_env_data/All in NAD 83 - UTM 21/Sites_and_subplots/env_var/xlsx/to use/env_subplots_TN_final.xlsx") %>% #environmental data from Terra Nova subplots
    rename(CC = "CC10fill")

env_subplots <- dplyr::bind_rows(env_subplots_TN, env_subplots_GM) # put subplots together
env_subplots$ex_ctrl <- env_subplots$ex_ctrl %>% 
  replace_na("pair") # turn na's into character so we can filter out exclosures
env_subplots <- env_subplots %>% 
  filter(ex_ctrl != "EX") %>% #filter our exclosure subplots
  dplyr::select(!ex_ctrl) %>% # remove exclosure control column
  dplyr::select(!Moose) %>% # remove old moose classification
  dplyr::select(!nitro) # remove nitro because not good dataset

GM_env_subplots <- subset(env_subplots, env_subplots$park_id == "GM")
TN_env_subplots <- subset(env_subplots, env_subplots$park_id == "TN")

env_subplots$ASP <-replace_na(env_subplots$ASP, 0.1)


```

### from entire parks

```{r}
SPC_TN <- rast("/Volumes/Emmerson's backup/C_forecasting_NL_env_data/All in NAD 83 - UTM 21/NP_FC_2010_2018/NP_SPC_TN.tif")
names(SPC_TN) <- "SPC_TN"
FAC_TN <- rast("/Volumes/Emmerson's backup/C_forecasting_NL_env_data/All in NAD 83 - UTM 21/NP_FC_2010_2018/NP_FAC_TN.tif")
names(FAC_TN) <- "FAC_TN"
EVIamp_TN <- rast("/Volumes/Emmerson's backup/C_forecasting_NL_env_data/All in NAD 83 - UTM 21/GLANCE30_EVI_2019/GLANCE30_EVIamp_TN.tif")
names(EVIamp_TN) <- "EVIamp_TN"
EVImed_TN <- rast("/Volumes/Emmerson's backup/C_forecasting_NL_env_data/All in NAD 83 - UTM 21/GLANCE30_EVI_2019/GLANCE30_EVImed_TN.tif")
names(EVImed_TN) <- "EVImed_TN"
FHT_TN <- rast("/Volumes/Emmerson's backup/C_forecasting_NL_env_data/All in NAD 83 - UTM 21/GFCH_FHT_2019/GFCH_FHT_TN.tif")
names(FHT_TN) <- "FHT_TN"
CC10fill_TN <- rast("/Volumes/Emmerson's backup/C_forecasting_NL_env_data/All in NAD 83 - UTM 21/GFCC_CC_2005_2010/GFCC_CC_TN_10_filled.tif")
names(CC10fill_TN) <- "CC10fill_TN"
SLO_TN <- rast("/Volumes/Emmerson's backup/C_forecasting_NL_env_data/All in NAD 83 - UTM 21/CDEM_topography_2011/CDEM_SLO_TN.tif")
names(SLO_TN) <- "SLO_TN"
ELE_TN <- rast("/Volumes/Emmerson's backup/C_forecasting_NL_env_data/All in NAD 83 - UTM 21/CDEM_topography_2011/CDEM_ELE_TN.tif")
names(ELE_TN) <- "ELE_TN"
ASP_TN <- rast("/Volumes/Emmerson's backup/C_forecasting_NL_env_data/All in NAD 83 - UTM 21/CDEM_topography_2011/CDEM_ASP_TN.tif")
names(ASP_TN) <- "ASP_TN"
LCT_TN <- rast("/Volumes/Emmerson's backup/C_forecasting_NL_env_data/All in NAD 83 - UTM 21/CEC_LCT_2020/CEC_LCT_2020_TN.tif")
names(LCT_TN) <- "LCT_TN"
LGS_TN <- rast("/Volumes/Emmerson's backup/C_forecasting_NL_env_data/All in NAD 83 - UTM 21/MSLSP_EVI_2019/MSLSP_LGS_TN_filled.tif")
names(LGS_TN) <- "LGS_TN"
moose_TN <- rast("/Volumes/Emmerson's backup/C_forecasting_NL_env_data/All in NAD 83 - UTM 21/NP_FC_2010_2018/moose_surveys/TN_2020/NP_moose2020_TN_clip.tif")
names(moose_TN) <- "moose_TN"

moose_TN[] = ifelse(moose_TN[]==1, 3, ifelse(moose_TN[]==2, 1, ifelse(moose_TN[]==3, 2, 4)))


SPC_GM <- rast("/Volumes/Emmerson's backup/C_forecasting_NL_env_data/All in NAD 83 - UTM 21/NP_FC_2010_2018/NP_SPC_GM.tif")
names(SPC_GM) <- "SPC_GM"
FAC_GM <- rast("/Volumes/Emmerson's backup/C_forecasting_NL_env_data/All in NAD 83 - UTM 21/NP_FC_2010_2018/NP_FAC_GM.tif")
names(FAC_GM) <- "FAC_GM"
EVIamp_GM <- rast("/Volumes/Emmerson's backup/C_forecasting_NL_env_data/All in NAD 83 - UTM 21/GLANCE30_EVI_2019/GLANCE30_EVIamp_GM.tif")
names(EVIamp_GM) <- "EVIamp_GM"
EVImed_GM <- rast("/Volumes/Emmerson's backup/C_forecasting_NL_env_data/All in NAD 83 - UTM 21/GLANCE30_EVI_2019/GLANCE30_EVImed_GM.tif")
names(EVImed_GM) <- "EVImed_GM"
FHT_GM <- rast("/Volumes/Emmerson's backup/C_forecasting_NL_env_data/All in NAD 83 - UTM 21/GFCH_FHT_2019/GFCH_FHT_GM.tif")
names(FHT_GM) <- "FHT_GM"
CC15fill_GM <- rast("/Volumes/Emmerson's backup/C_forecasting_NL_env_data/All in NAD 83 - UTM 21/GFCC_CC_2005_2010/GFCC_CC_GM_15_filled.tif")
names(CC15fill_GM) <- "CC15fill_GM"
SLO_GM <- rast("/Volumes/Emmerson's backup/C_forecasting_NL_env_data/All in NAD 83 - UTM 21/CDEM_topography_2011/CDEM_SLO_GM.tif")
names(SLO_GM) <- "SLO_GM"
ELE_GM <- rast("/Volumes/Emmerson's backup/C_forecasting_NL_env_data/All in NAD 83 - UTM 21/CDEM_topography_2011/CDEM_ELE_GM.tif")
names(ELE_GM) <- "ELE_GM"
ASP_GM <- rast("/Volumes/Emmerson's backup/C_forecasting_NL_env_data/All in NAD 83 - UTM 21/CDEM_topography_2011/CDEM_ASP_GM.tif")
names(ASP_GM) <- "ASP_GM"
LCT_GM <- rast("/Volumes/Emmerson's backup/C_forecasting_NL_env_data/All in NAD 83 - UTM 21/CEC_LCT_2020/CEC_LCT_2020_GM.tif")
names(LCT_GM) <- "LCT_GM"
LGS_GM <- rast("/Volumes/Emmerson's backup/C_forecasting_NL_env_data/All in NAD 83 - UTM 21/MSLSP_EVI_2019/MSLSP_LGS_GM_filled.tif")
names(LGS_GM) <- "LGS_GM"
moose_GM <- rast("/Volumes/Emmerson's backup/C_forecasting_NL_env_data/All in NAD 83 - UTM 21/NP_FC_2010_2018/moose_surveys/GM_2017/NP_moose2017_GM_clip.tif")
names(moose_GM) <- "moose_GM"

moose_GM[] = ifelse(moose_GM[]==1, 2, ifelse(moose_GM[]==2, 1, ifelse(moose_GM[]==3, 3, 1)))


```

## update species \# to dominant species

dominant species not used anymore (switched to forest type)

### for sites

```{r}
# associated numbers and dominant species
dominant_sp <- read_xlsx("/Volumes/Emmerson's backup/C_forecasting_NL_env_data/All in NAD 83 - UTM 21/NP_FC_2010_2018/prov_forest/string rasterization associations.xlsx") %>%
  rename(SPC = 'new integer field')
  

# seperate by park
dominant_sp_TN <- dplyr::select(dominant_sp, c(10, 9))
dominant_sp_GM <- dplyr::select(dominant_sp, c(10, 6))
dominant_sp_out <- dplyr::select(dominant_sp, c(10, 3))

sites_outside <- c("TN_30_2022", "TN_26_2022", "TN_05_2023", "TN_27_2022")

# add the dominant species in based on SPC number for each park
env_sites_SPD_TN <- env_sites[!(env_sites$unique_id %in% sites_outside),] %>% 
  filter(park == "TN") %>% 
  inner_join(dominant_sp_TN, by = "SPC") %>%
  rename(dominant = "dominant id TN")

env_sites_SPD_GM <- subset(env_sites, park == "GM") %>% 
  inner_join(dominant_sp_GM, by = "SPC")%>%
  rename(dominant = "dominant id GM")

env_sites$SPC <- env_sites$SPC %>% 
  replace_na(1)

env_sites_SPD_out <- env_sites[env_sites$unique_id %in% sites_outside,] %>% 
  inner_join(dominant_sp_out, by = "SPC")%>%
  rename(dominant = "dominant id outside")

# combine back together
env_sites_SPD_print <- rbind(env_sites_SPD_TN, env_sites_SPD_GM, env_sites_SPD_out) %>%
  dplyr::select(!c(SPC))
env_sites_SPD <- env_sites_SPD_print %>% 
  drop_na(dominant)
  
# seperate by park again
GM_env_sites <- subset(env_sites_SPD, env_sites_SPD$park == "GM")
TN_env_sites <- subset(env_sites_SPD, env_sites_SPD$park == "TN")
```

## fix aspect to 180

### for sites

```{r}
env_sites_SPD_print <- env_sites_SPD_print %>% 
  mutate(ASP = abs(180 - ASP))    # should it be absolute value of distance from 0 (which would ignore E to W). if we dont take absolute value the same problem is created just with south being repeated on eitehr end of the range

### fix na ASP
env_sites_SPD_print$ASP <-replace_na(env_sites_SPD_print$ASP, 0.1)
```

### for subplots

```{r}
env_subplots <- env_subplots %>% 
  mutate(ASP = abs(180 - ASP))    # should it be absolute value of distance from 0 (which would ignore E to W). if we dont take absolute value the same problem is created just with south being repeated on eitehr end of the range

### fix na ASP
env_subplots$ASP <-replace_na(env_subplots$ASP, 0.1)
```

### export process variables

```{r}
write.xlsx(env_subplots, file = "../final carbon data/env_subplots_final.xlsx")
env_site_final <- write.xlsx(env_sites_SPD_print, file = "../final carbon data/env_site_final.xlsx")
```

### for rasters

```{r}
values(ASP_GM) <- abs(180 - values(ASP_GM))

### fix na ASP
ASP_GM[is.na(ASP_GM[])] <- 0.01

# TN
values(ASP_TN) <- abs(180 - values(ASP_TN))

### fix na ASP
ASP_TN[is.na(ASP_TN[])] <- 0.01
```

## make individual moose layers

```{r}
moose_TNl <- moose_TN
moose_TNm <- moose_TN
moose_TNh <- moose_TN
moose_TNl[moose_TNl[] != 1 ] <- NA
moose_TNm[moose_TNm[] != 2 ] <- NA
moose_TNm[moose_TNm[] == 2 ] <- 1
moose_TNh[moose_TNh[] != 3 ] <- NA
moose_TNh[moose_TNh[] == 3 ] <- 1

moose_GMl <- moose_GM
moose_GMh <- moose_GM
moose_GMx <- moose_GM
moose_GMl[moose_GMl[] != 1 ] <- NA
moose_GMh[moose_GMh[] != 2 ] <- NA
moose_GMh[moose_GMh[] == 2 ] <- 1
moose_GMx[moose_GMx[] != 3 ] <- NA
moose_GMx[moose_GMx[] == 3 ] <- 1
```

## stack rasters

```{r}

TN_env_list <- list(FHT_TN, EVIamp_TN, EVImed_TN, SLO_TN, ELE_TN, ASP_TN, LGS_TN, moose_TN, moose_TNl, moose_TNm, moose_TNh)

TN_env_raster <- rast(TN_env_list)

GM_env_list <- list(FHT_GM, EVIamp_GM, EVImed_GM, SLO_GM, ELE_GM, ASP_GM, LGS_GM, moose_GM, moose_GMl, moose_GMh, moose_GMx)

GM_env_raster <- rast(GM_env_list)

writeRaster(GM_env_raster, filename="GM_env_raster.tif", overwrite=TRUE)
writeRaster(TN_env_raster, filename="TN_env_raster.tif", overwrite=TRUE)
```

# correlation

```{r}
l <- list()  

make_corrChart <- function(...) {
  mc <- match.call()
  mc[[1]] <- quote(chart.Correlation)
  structure(list(call = mc), class = "CorrChart")
}

print.CorrChart <- function(x, ...) eval(x$call)
```

### sites

#### both parks

```{r}
chart.Correlation <- function (R, histogram = TRUE, method = c("pearson", "kendall", 
    "spearman"), ...) 
{
    x = checkData(R, method = "matrix")
    if (missing(method)) 
        method = method[1]
    panel.cor <- function(x, y, digits = 2, prefix = "", use = "pairwise.complete.obs", 
        method = "pearson", cex.cor, ...) {
        usr <- par("usr")
        on.exit(par(usr))
        par(usr = c(0, 1, 0, 1))
        r <- cor(x, y, use = use, method = method)
        txt <- format(c(r, 0.123456789), digits = digits)[1]
        txt <- paste(prefix, txt, sep = "")
        if (missing(cex.cor)) 
            cex <- 0.8/strwidth(txt)
        test <- cor.test(as.numeric(x), as.numeric(y), method = method)
        Signif <- symnum(test$p.value, corr = FALSE, na = FALSE, 
            cutpoints = c(0, 0.001, 0.01, 0.05, 0.1, 1), symbols = c("***", 
                "**", "*", ".", " "))
        text(0.5, 0.5, txt, cex = cex * (abs(r) + 0.3)/1.3)
        text(0.8, 0.8, Signif, cex = cex, col = 2)
    }
    f <- function(t) {
        dnorm(t, mean = mean(x), sd = sd.xts(x))
    }
    dotargs <- list(...)
    dotargs$method <- NULL
    rm(method)
    hist.panel = function(x, ... = NULL) {
        par(new = TRUE)
        hist(x, col = "light gray", probability = TRUE, axes = FALSE, 
            main = "", breaks = "FD")
        lines(density(x, na.rm = TRUE), col = "red", lwd = 1)
        rug(x)
    }
    if (histogram) 
        pairs(x, gap = 0, lower.panel = panel.smooth, upper.panel = panel.cor, 
            diag.panel = hist.panel, ...)
    else pairs(x, gap = 0, lower.panel = panel.smooth, upper.panel = panel.cor, ...)
}

reg <- function(x, y, ...) {
  points(x,y, ...)
  abline(lm(y~x), col = "red") 
}

panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor, ...) {
  usr <- par("usr"); on.exit(par(usr))
  par(usr = c(0, 1, 0, 1))
  r <- cor(x, y) # was abs(cor(x, y))
  txt <- format(c(r, 0.123456789), digits = digits)[1]
  txt <- paste0(prefix, txt)
  if(missing(cex.cor)) cex.cor <- 2 # or 0.8/strwidth(txt)
  text(0.5, 0.5, txt, cex = cex.cor) # was cex.cor * abs(r))
}


```

```{r, warning=FALSE}
predictors_site_env <- env_sites_SPD[, -c(1:7, 19)]
# correlation structure
varCor <- cor(predictors_site_env, use="pairwise.complete.obs")
corrplot(varCor,  tl.col='black') # dendogram
chart.Correlation(predictors_site_env, histogram=F, pch=19)

l$chart_site_both <- make_corrChart(predictors_site_env, histogram=F, pch="0")
l$chart_site_both

png(filename = "/Users/emmersonEmmerson/Documents/Master's/C_forecasting_NL/code_for_stats/correlation plots/chart_site_both.png", height = 900, width = 900, units= "px")
l$chart_site_both

dev.off()

allDistNew <- abs(as.dist(cor(predictors_site_env, use="pairwise.complete.obs")))
allClusNew <- hclust(1 - allDistNew)
plot(allClusNew, hang=-1)

usdm::vif(as.data.frame(predictors_site_env))
usdm::vifstep(as.data.frame(predictors_site_env)) ## takes out the highest (sees above 10 as collinearity problem) so that values decrease
usdm::vifcor(as.data.frame(predictors_site_env), th=0.8) 
```

#### at each park

##### GM only

```{r, warning=FALSE}

predictors_site_env_GM <- GM_env_sites[, -c(1:7, 18:19)]
# correlation structure
varCor_GM <- cor(predictors_site_env_GM, use="pairwise.complete.obs")
corrplot(varCor_GM,  tl.col='black')

l$chart_site_GM <- make_corrChart(predictors_site_env_GM, histogram=F, pch=19)
l$chart_site_GM

png(filename = "/Users/emmersonEmmerson/Documents/Master's/C_forecasting_NL/code_for_stats/correlation plots/chart_site_GM.png", height = 900, width = 900, units= "px")
l$chart_site_GM
dev.off()

allDistNew_GM <- abs(as.dist(cor(predictors_site_env_GM, use="pairwise.complete.obs")))
allClusNew_GM <- hclust(1 - allDistNew_GM)
plot(allClusNew_GM, hang=-1)

usdm::vif(as.data.frame(predictors_site_env_GM))
usdm::vifstep(as.data.frame(predictors_site_env_GM)) ## takes out the highest (sees above 10 as collinearity problem) so that values decrease
usdm::vifcor(as.data.frame(predictors_site_env_GM), th=0.8) 
```

##### TN only

```{r, warning=FALSE}

predictors_site_env_TN <- TN_env_sites[, -c(1:7, 18:19)]
# correlation structure
varCor_TN <- cor(predictors_site_env_TN, use="pairwise.complete.obs")
corrplot(varCor_TN,  tl.col='black')

chart.Correlation(predictors_site_env_TN, histogram=F, pch=19)

l$chart_site_TN <- make_corrChart(predictors_site_env_TN, histogram=F, pch=19)

png(filename = "/Users/emmersonEmmerson/Documents/Master's/C_forecasting_NL/code_for_stats/correlation plots/chart_site_TN.png", height = 900, width = 900, units= "px")
l$chart_site_TN
dev.off()

allDistNew_TN <- abs(as.dist(cor(predictors_site_env_TN, use="pairwise.complete.obs")))
allClusNew_TN <- hclust(1 - allDistNew_TN)
plot(allClusNew_TN, hang=-1)

usdm::vif(as.data.frame(predictors_site_env_TN))
usdm::vifstep(as.data.frame(predictors_site_env_TN)) ## takes out the highest (sees above 10 as collinearity problem) so that values decrease
usdm::vifcor(as.data.frame(predictors_site_env_TN), th=0.8) 
```

### subplots

#### both parks

```{r, warning=FALSE}
predictors_subplot_env <- env_subplots[, c(12,13,17,18,16,15,14,11,19,9)]
# correlation structure
varCor_sub <- cor(predictors_subplot_env, use="pairwise.complete.obs")
corrplot(varCor_sub,  tl.col='black') # dendogram

chart.Correlation(predictors_subplot_env, histogram=F, pch=19)

l$chart_subplot_both <- make_corrChart(predictors_subplot_env, histogram=F, pch=19)

png(filename = "/Users/emmersonEmmerson/Documents/Master's/C_forecasting_NL/code_for_stats/correlation plots/chart_subplot_both.png", height = 900, width = 900, units= "px")
l$chart_subplot_both
dev.off()

allDistNew <- abs(as.dist(cor(predictors_subplot_env, use="pairwise.complete.obs")))
allClusNew <- hclust(1 - allDistNew)
plot(allClusNew, hang=-1)

usdm::vif(as.data.frame(predictors_subplot_env))
usdm::vifstep(as.data.frame(predictors_subplot_env)) ## takes out the highest (sees above 10 as collinearity problem) so that values decrease
usdm::vifcor(as.data.frame(predictors_subplot_env), th=0.8) 
```

#### at each park

##### GM only

```{r, warning=FALSE}

predictors_subplot_env_GM <- GM_env_subplots[, c(12,13,17,18,16,15,14,11,19,9)]
# correlation structure
varCor_sub_GM <- cor(predictors_subplot_env_GM, use="pairwise.complete.obs")
corrplot(varCor_sub_GM,  tl.col='black')

chart.Correlation(predictors_subplot_env_GM, histogram=F, pch=19)

l$chart_subplot_GM <- make_corrChart(predictors_subplot_env_GM, histogram=F, pch=19)

png(filename = "/Users/emmersonEmmerson/Documents/Master's/C_forecasting_NL/code_for_stats/correlation plots/chart_subplot_GM.png", height = 900, width = 900, units= "px")
l$chart_subplot_GM
dev.off()

allDistNew_GM <- abs(as.dist(cor(predictors_subplot_env_GM, use="pairwise.complete.obs")))
allClusNew_GM <- hclust(1 - allDistNew_GM)
plot(allClusNew_GM, hang=-1)

usdm::vif(as.data.frame(predictors_subplot_env_GM))
usdm::vifstep(as.data.frame(predictors_subplot_env_GM)) ## takes out the highest (sees above 10 as collinearity problem) so that values decrease
usdm::vifcor(as.data.frame(predictors_subplot_env_GM), th=0.8) 
```

##### TN only

```{r, warning=FALSE}

predictors_subplot_env_TN <- TN_env_subplots[, c(12,13,17,18,16,15,14,11,19,9)]
# correlation structure
varCor_sub_TN <- cor(predictors_subplot_env_TN, use="pairwise.complete.obs")
corrplot(varCor_sub_TN,  tl.col='black')

chart.Correlation(predictors_subplot_env_TN, histogram=F, pch=19)

l$chart_subplot_TN <- make_corrChart(predictors_subplot_env_TN, histogram=F, pch=19)

png(filename = "/Users/emmersonEmmerson/Documents/Master's/C_forecasting_NL/code_for_stats/correlation plots/chart_subplot_TN.png", height = 900, width = 900, units= "px")
l$chart_subplot_TN
dev.off()

allDistNew_TN <- abs(as.dist(cor(predictors_subplot_env_TN, use="pairwise.complete.obs")))
allClusNew_TN <- hclust(1 - allDistNew_TN)
plot(allClusNew_TN, hang=-1)

usdm::vif(as.data.frame(predictors_subplot_env_TN))
usdm::vifstep(as.data.frame(predictors_subplot_env_TN)) ## takes out the highest (sees above 10 as collinearity problem) so that values decrease
usdm::vifcor(as.data.frame(predictors_subplot_env_TN), th=0.8) 
```

### rasters

#### both pakrs

```{r, warning=FALSE}
TN_env_raster_df <- as.data.frame(TN_env_raster, xy = TRUE)
for ( col in 1:ncol(TN_env_raster_df)){
    colnames(TN_env_raster_df)[col] <-  sub("_TN*", "", colnames(TN_env_raster_df)[col])
}

GM_env_raster_df <- as.data.frame(GM_env_raster, xy = TRUE)
for ( col in 1:ncol(GM_env_raster_df)){
    colnames(GM_env_raster_df)[col] <-  sub("_GM*", "", colnames(GM_env_raster_df)[col]) 
}

GM_env_raster_df <- GM_env_raster_df %>% 
  rename(CC = "CC15fill")
TN_env_raster_df <- TN_env_raster_df %>% 
  rename(CC = "CC10fill")

NL_env_raster_df <- dplyr::bind_rows(GM_env_raster_df, TN_env_raster_df)

predictors_park_env_NL <- NL_env_raster_df[, c(7,5,6,11,10,9,4,8)]
# correlation structure
varCor_NL <- cor(predictors_park_env_NL, use="pairwise.complete.obs")
corrplot(varCor_NL,  tl.col='black')

chart.Correlation(predictors_park_env_NL, histogram=F, pch=19)

l$chart_raster_NL <- make_corrChart(predictors_park_env_NL, histogram=F, pch=19)

png(filename = "/Users/emmersonEmmerson/Documents/Master's/C_forecasting_NL/code_for_stats/correlation plots/chart_raster_NL.png", height = 900, width = 900, units= "px")
l$chart_raster_NL
dev.off()

allDistNew_NL <- abs(as.dist(cor(predictors_park_env_NL, use="pairwise.complete.obs")))
allClusNew_NL <- hclust(1 - allDistNew_NL)
plot(allClusNew_NL, hang=-1)

usdm::vif(as.data.frame(predictors_park_env_NL))
usdm::vifstep(as.data.frame(predictors_park_env_NL)) ## takes out the highest (sees above 10 as collinearity problem) so that values decrease
usdm::vifcor(as.data.frame(predictors_park_env_NL), th=0.8) 
```

#### at each park

##### GM only

```{r, warning=FALSE}
predictors_park_env_GM <- GM_env_raster_df[, c(7,5,6,11,10,9,4,8)]
# correlation structure
varCor_park_GM <- cor(predictors_park_env_GM, use="pairwise.complete.obs")
corrplot(varCor_park_GM,  tl.col='black')

chart.Correlation(predictors_park_env_GM, histogram=F, pch=19)

l$chart_raster_GM <- make_corrChart(predictors_park_env_GM, histogram=F, pch=19)

png(filename = "/Users/emmersonEmmerson/Documents/Master's/C_forecasting_NL/code_for_stats/correlation plots/chart_raster_GM.png", height = 900, width = 900, units= "px")
l$chart_raster_GM
dev.off()

allDistNew_GM <- abs(as.dist(cor(predictors_park_env_GM, use="pairwise.complete.obs")))
allClusNew_GM <- hclust(1 - allDistNew_GM)
plot(allClusNew_GM, hang=-1)

usdm::vif(as.data.frame(predictors_park_env_GM))
usdm::vifstep(as.data.frame(predictors_park_env_GM)) ## takes out the highest (sees above 10 as collinearity problem) so that values decrease
usdm::vifcor(as.data.frame(predictors_park_env_GM), th=0.8) 
```

##### TN only

```{r, warning=FALSE}

predictors_park_env_TN <- TN_env_raster_df[, c(7,5,6,11,10,9,4,8)]
# correlation structure
varCor_park_TN <- cor(predictors_park_env_TN, use="pairwise.complete.obs")
corrplot(varCor_park_TN,  tl.col='black')

chart.Correlation(predictors_park_env_TN, histogram=F, pch=19)

l$chart_raster_TN <- make_corrChart(predictors_park_env_TN, histogram=F, pch=19)

png(filename = "/Users/emmersonEmmerson/Documents/Master's/C_forecasting_NL/code_for_stats/correlation plots/chart_raster_TN.png", height = 900, width = 900, units= "px")
l$chart_raster_TN
dev.off()

allDistNew_TN <- abs(as.dist(cor(predictors_park_env_TN, use="pairwise.complete.obs")))
allClusNew_TN <- hclust(1 - allDistNew_TN)
plot(allClusNew_TN, hang=-1)

usdm::vif(as.data.frame(predictors_park_env_TN))
usdm::vifstep(as.data.frame(predictors_park_env_TN)) ## takes out the highest (sees above 10 as collinearity problem) so that values decrease
usdm::vifcor(as.data.frame(predictors_park_env_TN), th=0.8) 
```

